@model IEnumerable<taskcore.Models.ProjectsProgress>


    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Projeler</h6>
        </div>
        <div class="card-body">
            @foreach (var item in Model) {
            <h4 class="small font-weight-bold">@item.Project.Title <span class="float-right">@item.Progress%</span></h4>
            <div class="progress mb-4">
                <div class="progress-bar" role="progressbar" style="width: @item.Progress%" aria-valuenow="@item.Progress" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
            }
            @if (Model.Count() == 0)
            {
                <h4>Şu anda bir projeniz bulunmamaktadır.</h4>
            }

        </div>
    </div>
    <div class="card shadow mb-4">
        <div class="card-header py-3" >
            <h6 class="m-0 font-weight-bold text-primary">Bu hafta bitirilen görev sayısı</h6>
        </div>
        <div class="card-body">
            <div class="text-center" id="loadingicon" >
                <div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
                </div>
                <canvas id="myChart"></canvas>
            </div>
        </div>

    @section Scripts{
    <script>
        $(document).ready(function () {
            $('#loadingicon').show();
            setTimeout(loadChart, 1500);
        });

        function loadChart() {
            var ctx = document.getElementById('myChart').getContext('2d');
            fetch('/Work/WeekReport')
                .then(res => res.json())
                .then(list => {
                    $('#loadingicon').hide();
                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: list.filter(f => f.day != null).map(item =>
                                item.day
                            ),
                            datasets: [{
                                label: '# Bitirilen görev sayısı',
                                data: list.map(item => item.count),
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 206, 86, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                    'rgba(153, 102, 255, 0.2)',
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(255, 159, 64, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    });
                })
        }
    </script>
    }